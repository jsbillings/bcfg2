This directory contains repository maintenance tools.

accounts2xml.py
    - Generate an XML description of accounts on a machine from
      /etc/passwd

basebuilder.py <image directory>
    - builds v2 base.xml from bcfg1 repo

batchadd.py <filename>
    - Add records to Hostbase

bcfg2-completion.bash
    - Bash tab completion for bcfg2-admin

bcfg2-cron
    - Script to run bcfg2 with cron

bcfg2-import-config
    - Create tarball of changed files on a client for import into the
      specification

bcfg2_local.py
    - Perform a full Bcfg2 run against a local repository instead of
      against a remote server

bcfg2-profile-templates.py [<template>]
    - Benchmark template rendering times

bcfg2_svnlog.py
    - Send intelligent log messages about changes made to your Bcfg2
      repository from SVN postcommit

create-debian-pkglist-gp.py
    - Generate Pkgmgr XML files from etc/debian-pkglist.conf.  See
      http://trac.mcs.anl.gov/projects/bcfg2/wiki/Tools/DebianPkgmgrCreationScript

create-debian-pkglist.py
    - Generate Pkgmgr XML files for Debian packages

create-rpm-pkglist.py
    - Generate list of installed RPM packages

ctags.sh
    - Generate ctags (or etags) indexes for the Bcfg2 source

encap-util-count.sh
    - Produce a count of encap packages per directory

encap-util-expand.sh
    - Gets encaps out of a makeself .run file

encap-util-place.sh
    - Put encaps in the right directories

encap-util-xml.sh
    - Generate Pkgmgr XML files for encap packages

export.py
    - Export a tagged version of the Bcfg2 source

export.sh
    - Export a tagged version of the Bcfg2 source

hostbasepush.py
    - Call the Hostbase.rebuildState XML-RPC method

hostbase.py {-l|-c} <hostname>
    - Display or create host information for Hostbase

hostinfo.py {-q <query>|--showfields}
    - Query the hostbase databse

pkgmgr_gen.py
    - Generate Pkgmgr XML files from a list of directories that
      contain RPMS

pkgmgr_update.py
    - Update Pkgmgr XML files from a list of directories that contain
      RPMS

rpmlisting.py
    - Generate Pkgmgr XML files for RPM packages

selinux_baseline.py
    - Create a Bundle with all base SELinux entries on a client.  This
      is useful because different versions of the SELinux libraries
      have different capabilities, and some clients may have very,
      very large baselines.  selinux_baseline.py can be used to ensure
      that there are no 'extra' SELinux entries on such a client.

upgrade
    - This directory contains scripts used to upgrade to the specified
      version.  E.g., upgrade/1.2 has scripts needed to upgrade to
      Bcfg2 1.2.x from bcfg2 1.1.x

yum-listpkgs-xml.py
    - Produces a list of all packages installed and available in a
      format suitable for use by Packages or Pkgmgr

