.TH bcfg2-lint.conf 5

.SH NAME
bcfg2-lint.conf - configuration parameters for bcfg2-lint

.SH DESCRIPTION
.TP
bcfg2-lint.conf includes configuration parameters for
.I bcfg2-lint

.SH FILE FORMAT
The file is INI-style and consists of sections and options. A section
begins with the name of the sections in square brackets and continues
until the next section begins.

Options are specified in the form 'name = value'.

The file is line-based each newline-terminated line represents either
a comment, a section name or an option.

Any line beginning with a hash (#) is ignored, as are lines containing
only whitespace.

The file consists of one
.I [lint]
section, up to one
.I [errors]
section, and then any number of plugin-specific sections, documented below.  (Note that this makes it quite feasible to combine your
.B bcfg2-lint.conf
into your 
.B bcfg2.conf(5)
file, if you so desire.)

.SH GLOBAL OPTIONS
These options apply to
.I bcfg2-lint
generally, and must be in the
.I [lint]
section.

.TP
.BR plugins
A comma-delimited list of plugins to run.  By default, all plugins are
run.  This can be overridden by listing plugins on the command line.
See
.B bcfg2-lint(8)
for a list of the available plugins.

.SH ERROR HANDLING
Error handling is configured in the
.I [errors]
section.  Each option should be the name of an error and one of
.I "error"
,
.I "warning"
, or
.I "silent"
, which tells
.B bcfg2-lint(8)
how to handle the warning.  Error names and their defaults can be
displayed by running
.B bcfg2-lint(8)
with the
.B --list-errors
option.

.SH PLUGIN OPTIONS

These options apply only to a single plugin.  Each option should be in
a section named for its plugin; for instance, options for the InfoXML
plugin would be in a section called
.I [InfoXML]
.

If a plugin is not listed below, then it has no configuration.

In many cases, the behavior of a plugin can be configured by modifying
how errors from it are handled.  See
.B ERROR HANDLING
, above.

.TP
.BR Comments

The
.I Comments
plugin configuration specifies which VCS keywords and comments are
required for which file types.  The valid types of file are
.I "global"
(all file types),
.I "bundler"
(non-templated bundle files),
.I "sgenshi"
(templated bundle files),
.I "properties"
(property files),
.I "cfg"
(non-templated Cfg files),
.I "tgenshi"
(templated Cfg files),
.I "infoxml"
(info.xml files), and
.I "probe"
(probe files).

The specific types (i.e., types other than "global") all supplement
global; they do not override it.  The exception is if you specify an
empty option, e.g.:

.nf
cfg_keywords =
.fi

By default, the
.I $Id$
keyword is checked for and nothing else.

Multiple keywords or comments should be comma-delimited.

\(bu
.B <type>_keywords

Ensure that files of the specified type have the given VCS keyword.
Do
.I not
include the dollar signs.  I.e.:

.nf
infoxml_keywords = Revision
.fi

.I not:

.nf
infoxml_keywords = $Revision$
.fi

\(bu
.B <type>_comments

Ensure that files of the specified type have a comment containing the
given string.  In XML files, only comments are checked.  In plain text
files, all lines are checked since comment characters may vary.

.TP
.BR InfoXML

\(bu
.B required_attrs
A comma-delimited list of attributes to require on
.I <Info>
tags.  Default is "owner,group,perms".

.TP
.BR MergeFiles

\(bu
.B threshold
The threshold at which MergeFiles will suggest merging config files
and probes.  Default is 75% similar.

.TP
.BR Validate

\(bu
.B schema
The full path to the XML Schema files.  Default is
"/usr/share/bcfg2/schema".  This can be overridden with the
.I --schema
command-line option

.SH SEE ALSO
.BR bcfg2-lint(8)

